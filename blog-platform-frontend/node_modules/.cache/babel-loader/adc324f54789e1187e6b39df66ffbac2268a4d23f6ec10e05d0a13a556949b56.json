{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import API from\"../api\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function CommentThread(_ref){let{postId}=_ref;const[comments,setComments]=useState([]);const[newComment,setNewComment]=useState(\"\");const fetchComments=()=>{API.get(\"posts/\".concat(postId,\"/comments/\")).then(res=>setComments(res.data)).catch(()=>setComments([]));};useEffect(()=>{fetchComments();},[postId]);const handleSubmit=async e=>{e.preventDefault();try{await API.post(\"posts/\".concat(postId,\"/comments/\"),{content:newComment});setNewComment(\"\");fetchComments();}catch(_unused){alert(\"Failed to add comment\");}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"textarea\",{value:newComment,onChange:e=>setNewComment(e.target.value),placeholder:\"Add a comment...\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn\",type:\"submit\",children:\"Comment\"})]}),/*#__PURE__*/_jsx(\"div\",{children:comments.map(c=>/*#__PURE__*/_jsxs(\"div\",{style:{marginLeft:c.parent?\"20px\":\"0px\"},children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"b\",{children:c.author}),\": \",c.content]}),/*#__PURE__*/_jsx(\"small\",{children:new Date(c.created_at).toLocaleString()})]},c.id))})]});}const handleUpvote=async id=>{await API.post(\"posts/comments/\".concat(id,\"/upvote/\"));fetchComments();};// Inside map of comments\n/*#__PURE__*/_jsxs(\"button\",{className:\"btn\",onClick:()=>handleUpvote(c.id),children:[\"\\u2B06 (\",c.upvotes,\")\"]});export default CommentThread;","map":{"version":3,"names":["React","useEffect","useState","API","jsx","_jsx","jsxs","_jsxs","CommentThread","_ref","postId","comments","setComments","newComment","setNewComment","fetchComments","get","concat","then","res","data","catch","handleSubmit","e","preventDefault","post","content","_unused","alert","children","onSubmit","value","onChange","target","placeholder","className","type","map","c","style","marginLeft","parent","author","Date","created_at","toLocaleString","id","handleUpvote","onClick","upvotes"],"sources":["C:/Users/Arbisjan/Desktop/GIT/Blog Platform/blog-platform-frontend/src/components/CommentThread.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport API from \"../api\";\r\n\r\nfunction CommentThread({ postId }) {\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState(\"\");\r\n\r\n  const fetchComments = () => {\r\n    API.get(`posts/${postId}/comments/`)\r\n      .then((res) => setComments(res.data))\r\n      .catch(() => setComments([]));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchComments();\r\n  }, [postId]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await API.post(`posts/${postId}/comments/`, { content: newComment });\r\n      setNewComment(\"\");\r\n      fetchComments();\r\n    } catch {\r\n      alert(\"Failed to add comment\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea\r\n          value={newComment}\r\n          onChange={(e) => setNewComment(e.target.value)}\r\n          placeholder=\"Add a comment...\"\r\n        />\r\n        <button className=\"btn\" type=\"submit\">Comment</button>\r\n      </form>\r\n\r\n      <div>\r\n        {comments.map((c) => (\r\n          <div key={c.id} style={{ marginLeft: c.parent ? \"20px\" : \"0px\" }}>\r\n            <p><b>{c.author}</b>: {c.content}</p>\r\n            <small>{new Date(c.created_at).toLocaleString()}</small>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst handleUpvote = async (id) => {\r\n  await API.post(`posts/comments/${id}/upvote/`);\r\n  fetchComments();\r\n};\r\n\r\n// Inside map of comments\r\n<button className=\"btn\" onClick={() => handleUpvote(c.id)}>\r\n  â¬† ({c.upvotes})\r\n</button>\r\n\r\nexport default CommentThread;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}